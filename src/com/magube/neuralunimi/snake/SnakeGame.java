package com.magube.neuralunimi.snake;

import java.awt.Color;
import java.util.logging.Level;
import java.util.logging.Logger;

public class SnakeGame extends javax.swing.JFrame {
    private final int telaH = 480;
    private final int telaW = 700;
    
    private final int blocco = 20;
    
    public SnakeGame() {
        initComponents();
//        initTela();
        test();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tela = new com.magube.neuralunimi.snake.JTela();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Snake");
        setResizable(false);

        tela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                telaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout telaLayout = new javax.swing.GroupLayout(tela);
        tela.setLayout(telaLayout);
        telaLayout.setHorizontalGroup(
            telaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
        );
        telaLayout.setVerticalGroup(
            telaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 480, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void telaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_telaMouseClicked
        drawBlock(evt.getX(), evt.getY(), Color.RED);
        //drawVLine(10, 1);
    }//GEN-LAST:event_telaMouseClicked

    private void test() {
        try {
            Thread.sleep(1000);
        } catch (InterruptedException ex) {
            Logger.getLogger(SnakeGame.class.getName()).log(Level.SEVERE, null, ex);
        }
        drawBlock(50, 50, Color.RED);
    }
    
    private void initTela() {
        //Sfondo nero
        tela.setBackground(Color.BLACK);
        
        //Creazione linee verticali
        //Ogni 20 pixel, una riga
        int numLinee = telaW / blocco;
        int xIniz = 1;
        
        for (numLinee=numLinee; numLinee > 0; numLinee--) {
            System.out.println("Ok disegno linea numero " + numLinee);
            //drawVLine(xIniz, xIniz+1, Color.WHITE);
            drawVLine(50, 50, Color.WHITE);
            xIniz++;
        }
        
        
    }
    
    private void drawBlock(int x, int y, Color color) {
        tela.drawBlock(tela.getGraphics(), x, y, color);
        System.out.printf("Disegnato a %d %d\n", x, y);
    }
    
    private void drawVLine(int x, int y, Color color) {
        tela.drawLine(tela.getGraphics(), x, y, 2, 50, color);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.magube.neuralunimi.snake.JTela tela;
    // End of variables declaration//GEN-END:variables
}
